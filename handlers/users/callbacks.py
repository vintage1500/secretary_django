from telebot.types import CallbackQuery, Message
from data.loader import bot, manager
from keyboards.default import registration_menu
from keyboards.inline import *


@bot.callback_query_handler(func=lambda call: "main" in call.data)
def back_to_main_menu(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    first_name = manager.user.get_first_name(chat_id)
    text = f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ"
    user_administrator = manager.user.get_is_user_administrator(chat_id)
    if user_administrator is None or user_administrator[0] is False:
        if first_name:
            text += f", {first_name[0]}. –í—ã –≤–æ—à–ª–∏ –≤ —Å–∏—Å—Ç–µ–º—É"
            bot.edit_message_text(text, chat_id, callback.message.message_id, reply_markup=start_menu())
        else:
            text += ". –ü—Ä–æ–π–¥–∏—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é"
            bot.send_message(text, chat_id, callback.message.message_id,  reply_markup=registration_menu())
    else:
        text += f", {first_name[0]}. –£ –≤–∞—Å —Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!"
        bot.edit_message_text(text, chat_id, callback.message.message_id, reply_markup=start_administrator_menu())


@bot.callback_query_handler(func=lambda call: "faq" in call.data)
def show_faq_menu(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    bot.edit_message_text("–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã (FAQ)\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞",
                          chat_id, callback.message.message_id,
                          reply_markup=show_static_question_category())


@bot.callback_query_handler(func=lambda call: "category" in call.data)
def show_subcategory(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    _, category_name = callback.data.split("_")
    if category_name == "–ë–ª–∞–Ω–∫–∏ –∑–∞—è–≤–ª–µ–Ω–∏–π":
        bot.edit_message_text("""
–ë–ª–∞–Ω–∫–∏ –∑–∞—è–≤–ª–µ–Ω–∏–π
        
–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –±–ª–∞–Ω–∫–æ–≤ –∑–∞—è–≤–ª–µ–Ω–∏–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏: 

1. –ü–µ—Ä–µ–π—Ç–∏ –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –∏ –≤—ã–±—Ä–∞—Ç—å ¬´–°—Ç–∞—Ä—ã–π –¥–∏–∑–∞–π–Ω¬ª. 
2. –í —Ä–∞–∑–¥–µ–ª–µ ¬´–ö–∞—Ç–µ–≥–æ—Ä–∏–∏¬ª –Ω–∞–π—Ç–∏ –∏ –æ—Ç–∫—Ä—ã—Ç—å ¬´–ë–ª–∞–Ω–∫–∏ –∑–∞—è–≤–ª–µ–Ω–∏–π¬ª. 
3. –û–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –±–ª–∞–Ω–∫–æ–≤ –¥–ª—è –∑–∞—è–≤–ª–µ–Ω–∏–π. 

–í—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–π –±–ª–∞–Ω–∫ –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ.        
""", chat_id, callback.message.message_id, reply_markup=back_static_categories())
    else:
        category_id = manager.question_category.get_category_id_by_name(category_name)[0]
        bot.edit_message_text(f"{category_name}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—é", chat_id, callback.message.message_id,
                              reply_markup=show_subcategories(category_id))


@bot.callback_query_handler(func=lambda call: "subcat" in call.data)
def show_subcategory_question_description(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    _, subcategory_id = callback.data.split("_")
    question_info = manager.question_subcategory.get_subcategories_description_by_subcategory_id(subcategory_id)[0]
    string = question_info[0] + "\n\n" + question_info[1]
    bot.edit_message_text(string, chat_id, callback.message.message_id, reply_markup=back_static_categories())


@bot.callback_query_handler(func=lambda call: "profile" in call.data)
def show_profile(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    user_info = manager.user.get_full_user_info(chat_id)
    string = (f"–ü—Ä–æ—Ñ–∏–ª—å\n\n–ü–æ–ª–Ω–æ–µ –∏–º—è: {user_info[0]} {user_info[1]} {user_info[2]}\n"
              f"–ì—Ä—É–ø–ø–∞: {user_info[3]}")
    if user_info[4]:
        string += "\n–í—ã —è–≤–ª—è–µ—Ç–µ—Å—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"
    bot.edit_message_text(string, chat_id, callback.message.message_id, reply_markup=back_main())


@bot.callback_query_handler(func=lambda call: "rules" in call.data)
def show_rules(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    string = "–ü—Ä–∞–≤–∏–ª–∞\n\nüîñ –ò—Å–ø–æ–ª—å–∑—É—è —Å–µ—Ä–≤–∏—Å –°–µ–∫—Ä–µ—Ç–∞—Ä—å –§–∞–∫—É–ª—å—Ç–µ—Ç–∞, –í—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ " \
             "–∏ —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –¥–∞–Ω–Ω—ã–º–∏ –ø—Ä–∞–≤–∏–ª–∞–º–∏* " \
             "\n\n–î–∞–Ω–Ω—ã–π –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –≤ —Ä–∞–º–∫–∞—Ö —É—á–µ–±–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ ¬´–ß–∞—Ç-–±–æ—Ç—ã –¥–ª—è –ú–æ—Å–∫–æ–≤—Å–∫–æ–≥–æ –ü–æ–ª–∏—Ç–µ—Ö–∞¬ª. " \
             "–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è –æ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —ç—Ç–∞–ø–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –ø–æ—ç—Ç–æ–º—É –µ–≥–æ" \
             " —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –º–æ–∂–µ—Ç –¥–æ–ø–æ–ª–Ω—è—Ç—å—Å—è –∏ —É–ª—É—á—à–∞—Ç—å—Å—è."
    bot.edit_message_text(string, chat_id, callback.message.message_id, reply_markup=back_main())


@bot.callback_query_handler(func=lambda call: "ask" in call.data)
def start_ask_question(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    bot.edit_message_text(f"–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–æ–ø—Ä–æ—Å–∞", chat_id, callback.message.message_id,
                          reply_markup=show_dynamic_question_category())


@bot.callback_query_handler(func=lambda call: "ctg" in call.data)
def start_ask_question_ctg(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    _, category_name = callback.data.split("_")
    bot.edit_message_text(f"–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å. –ö–∞—Ç–µ–≥–æ—Ä–∏—è {category_name}\n\n–í–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –û–î–ù–ò–ú —Å–æ–æ–±—â–µ–Ω–∏–µ–º!\n", chat_id,
                          callback.message.message_id, reply_markup=back_dynamic_categories())
    bot.register_next_step_handler(callback.message, get_new_question, callback.message.id, category_name)


def get_new_question(message: Message, old_message_id, category_name):
    chat_id = message.chat.id
    question_text = message.text
    student_id = manager.user.get_user_id(chat_id)
    category_id = manager.question_category.get_category_id_by_name(category_name)
    manager.dynamic_question.add_dynamic_question(student_id, question_text, category_id)
    bot.delete_message(chat_id, old_message_id)
    bot.send_message(chat_id, "–í–æ–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö. –í—ã –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º—É",
                     reply_markup=start_menu())


@bot.callback_query_handler(func=lambda call: "answer" in call.data)
def start_answer_question(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    bot.edit_message_text("–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", chat_id, callback.message.message_id,
                          reply_markup=show_category_answer())


@bot.callback_query_handler(func=lambda call: "acategory" in call.data)
def continue_answer_question(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    _, category_name = callback.data.split("_")
    questions = manager.dynamic_question.get_dynamic_question_by_category(category_name)
    for question in questions:
        text = " ".join(question[0:2])
        text += " " + question[3] + " " + question[6][:10]
        print(text)
    # print(questions[0][6][:20])
    # q = [print(" ".join(question[0:2]), question[3], question[6][:10]) for question in questions]
    bot.edit_message_text(f"–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã. –ö–∞—Ç–µ–≥–æ—Ä–∏—è {category_name}\n\n–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—É–¥–µ–Ω—Ç–∞, –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–≤–µ—Ç–∏—Ç—å",
                          chat_id, callback.message.message_id, reply_markup=show_category_questions(category_name))


@bot.callback_query_handler(func=lambda call: 'telephone' in call.data)
def show_telephones(callback: CallbackQuery):
    chat_id = callback.message.chat.id
    string = f"""
–¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫    

–ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä (–¶–†–°) –Ω–∞ –ë–æ–ª—å—à–æ–π –°–µ–º–µ–Ω–æ–≤—Å–∫–æ–π:
–ê—É–¥–∏—Ç–æ—Ä–∏—è: –í-207
–¢–µ–ª–µ—Ñ–æ–Ω: +74952230523, –¥–æ–±. 1105, 1175, 1215, 1375
E-mail: crs-bs@mospolytech.ru

–ú–Ω–æ–≥–æ—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä (–¶–†–°) –Ω–∞ –ü—Ä—è–Ω–∏—à–Ω–∏–∫–æ–≤–∞:
–ê—É–¥–∏—Ç–æ—Ä–∏—è: –ü–†1311
–¢–µ–ª–µ—Ñ–æ–Ω: +74952230523, –¥–æ–±. 4056, 4059, 4060
E-mail: crs-pryaniki@mospolytech.ru

–ú–æ–±–∏–ª–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π –æ—Ç–¥–µ–ª: 
–ù–∞—á–∞–ª—å–Ω–∏–∫: –ö–æ–ª–µ—Å–Ω–∏–∫–æ–≤ –í–∞–ª–µ—Ä–∏–π –ê–ª–µ–∫—Å–µ–µ–≤–∏—á
–ê–¥—Ä–µ—Å: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ë. –°–µ–º—ë–Ω–æ–≤—Å–∫–∞—è, 38, –∫–æ—Ä–ø. –ù
–ê—É–¥–∏—Ç–æ—Ä–∏—è: –ù-517
–¢–µ–ª–µ—Ñ–æ–Ω: +74952230523, –¥–æ–±. 1025

–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–π –≥–æ—Ä–æ–¥–æ–∫:
–î–∏—Ä–µ–∫—Ç–æ—Ä: –õ—É–∫–∞—à–æ–≤–∞ –ú–∞—Ä–∏–Ω–∞ –ò–≤–∞–Ω–æ–≤–Ω–∞
–¢–µ–ª–µ—Ñ–æ–Ω: +74952230523

–ü—Ä–æ—Ñ—Å–æ—é–∑–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: 
–ê–¥—Ä–µ—Å: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ë. –°–µ–º—ë–Ω–æ–≤—Å–∫–∞—è, 38, –∫–æ—Ä–ø. –í
–ê—É–¥–∏—Ç–æ—Ä–∏—è: –í-202
–¢–µ–ª–µ—Ñ–æ–Ω: +74952230531
–ü–æ—á—Ç–∞: profkom@mospolytech.ru

–ë—É—Ö–≥–∞–ª—Ç–µ—Ä–∏—è:
–ê–¥—Ä–µ—Å: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ë. –°–µ–º—ë–Ω–æ–≤—Å–∫–∞—è, 38, –∫–æ—Ä–ø. –ê
–ê—É–¥–∏—Ç–æ—Ä–∏—è: –ê-307

–ü—Ä–æ–µ–∫—Ç–Ω–∞—è –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å:
–ù–∞—á–∞–ª—å–Ω–∏–∫ : –ü–µ—Ç—É—Ö–æ–≤ –ò–≤–∞–Ω –°–µ—Ä–≥–µ–µ–≤–∏—á
–ê–¥—Ä–µ—Å: –≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ë. –°–µ–º—ë–Ω–æ–≤—Å–∫–∞—è, 38, –∫–æ—Ä–ø. –ê
–ê—É–¥–∏—Ç–æ—Ä–∏—è –ê-102
–¢–µ–ª–µ—Ñ–æ–Ω: +74952230523 –¥–æ–±. 1539
–ü–æ—á—Ç–∞: cpd@mospolytech.ru


–û–±—â–µ–µ:
–ö–æ–Ω—Ç–∞–∫—Ç-—Ü–µ–Ω—Ç—Ä:
+74952230523
+74952763736
–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã:
–ü–Ω. ‚Äî –ß—Ç.: 9:00 - 21:00
–ü—Ç: 9:00 - 20:00
–°–±. ‚Äî –í—Å.: 9:30 - 17:15

–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã (–∫—Ä–æ–º–µ –≤–æ–ø—Ä–æ—Å–æ–≤ –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏):
mospolytech@mospolytech.ru
"""
    bot.edit_message_text(string, chat_id, callback.message.id, reply_markup=back_main())

